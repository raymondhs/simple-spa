procedure Alpha {
  while i {
    while j {
      x = 2 + x; }
  x = 2 + x;
  call Beta;
  i = 1 + i; }
x = 0;
  i = 5;
  z = z + x + i;
  y = 2 + z;

while j {
  x = 2 + x; }
}

procedure Beta{
  i = i-1;
  j = 1-j;
  if i then {
    k = k+1;
    l = k*l;
  } else{
    a = a*b*c+d;
    b = a-0+0-0+1*b;
    call Gamma;
  }
  while i {
    i = i+k;
    k = 1+2+3+4;
  }
}

procedure Gamma{
  i=1;
  j=2;
  k=3;
  l=i+j+k;
}

procedure Caller{
  call Alpha;
  call Beta;
  call Gamma;
  i=i+1;
}

procedure TestPattern{
  call Caller;
  a=a+b-c*d+1;
  b=(a+b)*c+2-d;
  c=(a-(b+c)*d)*2;
  d=a*((b-c)+(d*2));
  if i then {
    a=a+b-c*d+1;
    b=(a+b)*c+2-d;
  } else {
    c=(a-(b+c)*d)*2;
    d=a*((b-c)+(d*2));
  } while j {
    a=a+b-c*d+1;
    b=(a+b)*c+2-d;
    c=(a-(b+c)*d)*2;
    d=a*((b-c)+(d*2));
  }
  call Alpha;
}